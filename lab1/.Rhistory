demo()
install.packages("http://www.bnlearn.com/releases/bnlearn_latest.tar.gz")
install.packages("http://www.bnlearn.com/releases/bnlearn_latest.tar.gz")
install.packages("bnlearn")
x <- (1, 2, 3)
x <- c(1, 2, 3)
x*2
??hc
############# TASK ONE #############
library(bnlearn)
source ("import_data.R")
ret <- load.data()
############# TASK ONE #############
library(bnlearn)
library(gRain)
source ("import_data.R")
ret <- load.data()
df <- ret$df
header <- ret$header
sapply(df,class)
#View(df)
bn1 <- hc(df, start = NULL, whitelist = NULL, blacklist = NULL,
score = NULL, debug = FALSE, restart = 0, perturb = 1,
max.iter = Inf, maxp = Inf, optimized = TRUE)
bn2 <- hc(df, start = NULL, whitelist = NULL, blacklist = NULL,
score = NULL, debug = FALSE, restart = 0, perturb = 1,
max.iter = Inf, maxp = Inf, optimized = TRUE)
graphviz.plot(bn1)
all.equal(bn1,bn2) # Should be false
############# TASK TWO #############
im_sa_si <- c(1:1)
no_of_arcs <- integer(length=0)
score <- integer(length=0)
opt_sample_size <- numeric(length=0)
for (i in im_sa_si){
bnBD <- hc(df, start = NULL, score = "bde", iss=i,
restart = 3, perturb = 3, max.iter = Inf,
maxp = Inf, optimized = TRUE)
no_of_arcs <- c(no_of_arcs, nrow(bnBD$arcs))
score <- c(score, score(bnBD,df, type = "bde", iss=i))
if (i==1 | i ==2000){
opt_sample_size <- c(opt_sample_size, alpha.star(bnBD, df))
}
}
graphviz.plot(bnBD)
plot(im_sa_si,no_of_arcs, xlab="Imaginary sample size", ylab="Number of arcs")
abline(v = opt_sample_size, untf = FALSE, col="green")
plot(im_sa_si,score, type="l", xlab="Imaginary sample size", ylab="Score")
abline(v = opt_sample_size, untf = FALSE, col="green")
############# TASK THREE #############
finalBN <- hc(df, start = NULL, score = "bde", iss=80,
restart = 3, perturb = 3, max.iter = Inf,
maxp = Inf, optimized = TRUE)
nrow(finalBN$arcs) #8 arcs should be fine
graphviz.plot(finalBN)
copy <- finalBN
### Exact ###
exact.fit.result <- bn.fit(finalBN, df) #done with MLE
efr <- as.grain(exact.fit.result)
compile(efr)
setwd("~/Projects/aml/lab1")
############# TASK ONE #############
library(bnlearn)
library(gRain)
source ("import_data.R")
ret <- load.data()
df <- ret$df
header <- ret$header
sapply(df,class)
#View(df)
bn1 <- hc(df, start = NULL, whitelist = NULL, blacklist = NULL,
score = NULL, debug = FALSE, restart = 0, perturb = 1,
max.iter = Inf, maxp = Inf, optimized = TRUE)
bn2 <- hc(df, start = NULL, whitelist = NULL, blacklist = NULL,
score = NULL, debug = FALSE, restart = 0, perturb = 1,
max.iter = Inf, maxp = Inf, optimized = TRUE)
graphviz.plot(bn1)
all.equal(bn1,bn2) # Should be false
############# TASK TWO #############
im_sa_si <- c(1:1)
no_of_arcs <- integer(length=0)
score <- integer(length=0)
opt_sample_size <- numeric(length=0)
for (i in im_sa_si){
bnBD <- hc(df, start = NULL, score = "bde", iss=i,
restart = 3, perturb = 3, max.iter = Inf,
maxp = Inf, optimized = TRUE)
no_of_arcs <- c(no_of_arcs, nrow(bnBD$arcs))
score <- c(score, score(bnBD,df, type = "bde", iss=i))
if (i==1 | i ==2000){
opt_sample_size <- c(opt_sample_size, alpha.star(bnBD, df))
}
}
graphviz.plot(bnBD)
plot(im_sa_si,no_of_arcs, xlab="Imaginary sample size", ylab="Number of arcs")
abline(v = opt_sample_size, untf = FALSE, col="green")
plot(im_sa_si,score, type="l", xlab="Imaginary sample size", ylab="Score")
abline(v = opt_sample_size, untf = FALSE, col="green")
############# TASK THREE #############
finalBN <- hc(df, start = NULL, score = "bde", iss=80,
restart = 3, perturb = 3, max.iter = Inf,
maxp = Inf, optimized = TRUE)
nrow(finalBN$arcs) #8 arcs should be fine
graphviz.plot(finalBN)
copy <- finalBN
### Exact ###
exact.fit.result <- bn.fit(finalBN, df) #done with MLE
efr <- as.grain(exact.fit.result)
compile(efr)
remove.packages("rGain")
remove.packages("gRain")
installed.packages("bnlearn")
source("http://bioconductor.org/biocLite.R")
biocLite("graph", "RBGL", "Rgraphviz")
install.packages("gRain", dependencies=TRUE)
############# TASK ONE #############
library(bnlearn)
library(gRain)
source ("import_data.R")
ret <- load.data()
df <- ret$df
header <- ret$header
sapply(df,class)
#View(df)
bn1 <- hc(df, start = NULL, whitelist = NULL, blacklist = NULL,
score = NULL, debug = FALSE, restart = 0, perturb = 1,
max.iter = Inf, maxp = Inf, optimized = TRUE)
bn2 <- hc(df, start = NULL, whitelist = NULL, blacklist = NULL,
score = NULL, debug = FALSE, restart = 0, perturb = 1,
max.iter = Inf, maxp = Inf, optimized = TRUE)
graphviz.plot(bn1)
all.equal(bn1,bn2) # Should be false
############# TASK TWO #############
im_sa_si <- c(1:1)
no_of_arcs <- integer(length=0)
score <- integer(length=0)
opt_sample_size <- numeric(length=0)
for (i in im_sa_si){
bnBD <- hc(df, start = NULL, score = "bde", iss=i,
restart = 3, perturb = 3, max.iter = Inf,
maxp = Inf, optimized = TRUE)
no_of_arcs <- c(no_of_arcs, nrow(bnBD$arcs))
score <- c(score, score(bnBD,df, type = "bde", iss=i))
if (i==1 | i ==2000){
opt_sample_size <- c(opt_sample_size, alpha.star(bnBD, df))
}
}
graphviz.plot(bnBD)
plot(im_sa_si,no_of_arcs, xlab="Imaginary sample size", ylab="Number of arcs")
abline(v = opt_sample_size, untf = FALSE, col="green")
plot(im_sa_si,score, type="l", xlab="Imaginary sample size", ylab="Score")
abline(v = opt_sample_size, untf = FALSE, col="green")
############# TASK THREE #############
finalBN <- hc(df, start = NULL, score = "bde", iss=80,
restart = 3, perturb = 3, max.iter = Inf,
maxp = Inf, optimized = TRUE)
nrow(finalBN$arcs) #8 arcs should be fine
graphviz.plot(finalBN)
copy <- finalBN
### Exact ###
exact.fit.result <- bn.fit(finalBN, df) #done with MLE
efr <- as.grain(exact.fit.result)
compile(efr)
source("http://bioconductor.org/biocLite.R")
biocLite("graph", "RBGL", "Rgraphviz")
install.packages("gRain", dependencies=TRUE)
source("http://bioconductor.org/biocLite.R")
biocLite("graph", "RBGL", "Rgraphviz")
install.packages("gRain", dependencies=TRUE)
source("http://bioconductor.org/biocLite.R")
biocLite("graph", "RBGL", "Rgraphviz")
install.packages("gRain", dependencies=TRUE)
source("http://bioconductor.org/biocLite.R")
biocLite("graph", "RBGL", "Rgraphviz")
install.packages("gRain", dependencies=TRUE)
biocLite("graph", "RBGL", "Rgraphviz")
install.packages("gRain", dependencies=TRUE)
source("http://bioconductor.org/biocLite.R")
biocLite("graph", "RBGL", "Rgraphviz")
install.packages("gRain", dependencies=TRUE)
